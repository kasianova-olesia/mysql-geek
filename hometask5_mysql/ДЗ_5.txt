1. Реализовать практические задания на примере других таблиц и запросов.
(Реализовала в консоле, все манипуляции продела, как наглядно показать, незнаю)

Допустим в 1 консоле:
1)Залогинились, просмотрели схемы, выбрали "сотрудники"
USE `sotrudniki`;
2) Блокируем таблицы
3) LOCK TABLE `stat` READ; (чтение доступно)
   Выполнили 2 запроса во 2 консоле и разблокировали таблицу
4) UNLOCK TABLES;



2 консоль:
Залогинились, просмотрели схемы, выбрали "сотрудники"
1) SELECT * FROM `stat`; 
2) DELETE FROM `stat` WHERE `id` = '8';
3) UPDATE `stat` SET `brithday` = '1984-02-27', `salary` = '116000' WHERE `id` = '11';
После разблокировки таблицы, операции выполнились


2. Подумать, какие операции являются транзакционными, и написать несколько примеров с транзакционными запросами.
(Фантизия чет не очень у меня)
SET SQL_SAFE_UPDATES = 0;

SET AUTOCOMMIT = 0;

BEGIN;

SET @x = (SELECT MAX(`salary`) AS `max` FROM `stat` WHERE `otdel`= '2');

UPDATE `stat` SET `salary` = 190850 WHERE `salary` = @x;
COMMIT;

SET SQL_SAFE_UPDATES = 1;

SET AUTOCOMMIT = 1;

SET SQL_SAFE_UPDATES = 0;

SET AUTOCOMMIT = 0;


BEGIN;

SET @x = (SELECT MIN(`salary`) AS `min` FROM `stat` WHERE `otdel`= '3');

UPDATE `stat` SET `salary` = 102500 WHERE `salary` = @x;

COMMIT;


SET SQL_SAFE_UPDATES = 1;

SET AUTOCOMMIT = 1;

3. Проанализировать несколько запросов с помощью EXPLAIN. (Честно говоря, не совсем уловила ДЗ, нам необходимо, чтобы filtered сводился к нулю, т.е. его значение должно быть минимальным?) 
EXPLAIN

SELECT `deportament`.`name` AS 'Название отдела', 

COUNT(*) AS 'Кол-во сотрудников',

SUM(`stat`.`salary`) AS 'Общая Зарплата'

FROM `deportament`

LEFT JOIN `stat`

ON `stat`.`otdel` = `deportament`.`id_dep` 

GROUP BY `deportament`.`id_dep`, `deportament`.`name`;  

EXPLAIN

SELECT `lastname`, MAX(`salary`) AS `max` FROM `stat`

WHERE `otdel` 

GROUP BY `lastname` 

ORDER BY `max` DESC


